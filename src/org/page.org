#+TITLE: Lab Page
#+SETUPFILE: ~/apps/org-html-themes/setup/theme-readtheorg.setup
#+export_file_name: ../docs/labpages.html

* Lab Pages

  
** Page Structure

   Each page has the following sections:
   
   1. Header
   2. Footer
   3. Sidebar
   4. Content

   Content Section is specific to each page whereas other sections are
   lab specific.

   #+NAME: page-layout
   #+BEGIN_SRC typescript
     render() : string {
         return `<html> {this.b} </html>`;
     }
   #+END_SRC

** Page Class :noexport:

   #+NAME: page-class
   #+BEGIN_SRC typescript :noweb yes
     class Page {

         static saveDir = 'pages';
         fn: string;

         constructor(fn: string) {
             this.fn = fn;
         }

         filePath() : string {
             return path.resolve(Page.saveDir, this.fn);
         }

         <<page-layout>>
     }
   #+END_SRC

   
** Functionality

   
*** Render

    Saving the generated html to a file. The location is configured
    for each page in its subclass.

* Introduction Page

  
** Class :noexport:

   #+NAME: intro-class
   #+BEGIN_SRC typescript
     class IntroductionPage extends Page {

         static filename : string = 'Introduction.html';
         content : string;

         constructor(content: string) {
             super(IntroductionPage.filename);
             this.content = content;
         }

         render() : string {
           return this.content;
         }
         
         save() : void {
             console.log(`writing to ${this.filePath()}`);
             fs.ensureFileSync(this.filePath());
             fs.writeFileSync(this.filePath(), this.content, 'utf-8');
         }
     }

   #+END_SRC
* Tangle :noexport:


  #+BEGIN_SRC typescript :noweb yes :tangle ../code/page.ts
    import * as path from 'path';
    import * as fs from 'fs-extra';

    <<page-class>>
    <<intro-class>>

    const ip = new IntroductionPage("hello kitty");
    console.log(ip.render());
  #+END_SRC
