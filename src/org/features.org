#+title: Features

* Following features are supported
      
** Build a Lab

   Using the =labgen= cli command the user can build a =Lab=.  In this
   context, a =Lab= refers to the html pages (and all related assets)
   that makeup the website for a /Virtual Labs/ lab.

   
*** Requirements for building a lab

    1. The lab should have a repository on Github which contains a
       =lab-descriptor.json= file on the master branch.    

*** Process

    The pages to be generated for any lab are predefined and listed
    below.  

    *Pages in a lab*
    
      1. Introduction
      2. Objective
      3. List Of Experiments
      4. Target Audience
      5. Course Alignment
      6. Feedback

    Each of the above pages have the same layout and styling and one
    section for page specific content.  The layout that is common
    across pages is specified in a template called
    =skeleton.handlebars=.  The page specific content is defined in
    the =lab-descriptor.json= file and is expected to be in a specific
    format by the content template.

    The figure below depicts the process of building a page using data
    from lab descriptor and templates.

    [[../img/page-generation.png]]


**** Page Configuration

     To generate a page, we need to know the template to use, and the
     name of the resulting html page. The =Page Configuration=
     contains this information.

     |------------------+----------------------------------------|
     | Field            | Description                            |
     |------------------+----------------------------------------|
     | Heading          | Content Heading to be displayed        |
     | Descriptor Field | Field in the json that as the content. |
     | Tempalate        | The Template to be used                |
     | Page Name        | Name of the generated html page        |
     |------------------+----------------------------------------|


Electrical machines => Electrical machines (simulation)


     
***** Sample Config

      #+BEGIN_EXAMPLE
      Heading := Introduction
      Descriptor Field := introduction
      Template := Introduction
      Outfn := 
      #+END_EXAMPLE

***** Why not derive the page name from the template name?

      Template file-name to generated file-name is not a one-to-one
      mapping.  More than one template names map to a one target page.
      
      Example:

      #+BEGIN_EXAMPLE
	NestedListOfExperiments.handlebars => ListOfExperiments.html
	ListOfExperiments.handlebars => ListOfExperiments.html      
      #+END_EXAMPLE
      
**** Page Templates

     Page templates are html templates written in a templating
     language.

     Following templates are defined:
     1. Skeleton
     2. Introduction
     3. Objective
     4. ListOfExperiments
     5. NestedListOfExperiments
     6. TargetAudience

***** Skeleton

      The =skeleton.handlebars= template is used to build the page
      structure that is common for each of the Lab pages.

***** Pages

****** Introduction

       Content: Single Paragraph of text
       
****** Objective
       
       Single paragraph of text

****** List Of Experiments

******* Nested List       
       
	Array of Experiments objects

******* Flat List
	
	Array of experiment sections

****** Target Audience
       
       UG, PG

****** Feedback

       fixed content


** Build an Experiment

   An experiment can be of two types:
     
   1. IIITH Experiment
   2. Phase III Markdown-authored Experiment


   Each type of experiment has a different build process.  The build
   process for each kind of experiment is described below.
     
*** IIITH Experiment

    Each IIITH Experiment is located in a gitlab repository.  The
    build process involves cloning the repository and running make.
    This creates a build/ folder in the repository which contains
    the working experiment.

      
*** Phase III Markdown-authored Experiment

    A =Phase 3 - Markdown Authored experiment= is an experiment that
    follows the IITB Experiment development model.  This experiment
    sits in a private gitlab repository and the repository only
    contains experiment specific content.  Additional processing
    needs to be performed to generate experiment pages in the form
    of Phase-3 UI.

    After the build process the experiment resides in a predefined
    location.

      
** Deploy a Lab and All its experiments

   Deployment is the process of copying the builds to a given
   location in a publically accessible server.

   Assumtions: 
   - The script is executed on the same machine that would be
     hosting the labs and experiments.
   - The builds are available on the same machine.
   - Verifying the hosted url is not possible (technical
     considerations of reverse proxy)
