#+TITLE: Application Entry

* Process

  

  
** From the project home

   

** Deployment

   For experiment deployment, if the lab directory exists on the
   server, then we copy the build to the

   

* Lab from Descriptor

  #+NAME: from-desc
  #+BEGIN_SRC typescript
    lab.fromDescriptor(ld)
        .summarize()
        .generatePages()
        .buildExperiments()
        .buildLab()
        .deploy()
        //.updateSources(level)


  #+END_SRC
* Tangle :noexport:
  
  #+BEGIN_SRC typescript :noweb yes :tangle ../code/index.ts
  #!/usr/bin/env node

  import * as chalk from 'chalk';
  import * as boxen from 'boxen';
  import * as figures from 'figures';
  import * as fs from 'fs-extra';
  import * as path from 'path';

  import * as lab from './lab';
  import {Lab, ContentKind} from './lab';
  import {LabDescriptor, loadLabDescriptor} from './labdescriptor';

  import * as shell from 'shelljs';

  shell.config.silent = true;
  shell.set('-e');

  let labpath;
  let level;
  
  if (process.argv[2] === 'init') {
      labpath = process.argv[3];
      shell.cp('empty-lab-descriptor.json', path.resolve(labpath, 'lab-descriptor.json'));
  }
  else {
      if (process.argv[2] === '-v') {
          shell.config.silent = false;
          level = process.argv[3];
          labpath = process.argv[4];
      }
      else {
          level = process.argv[2];
          labpath = process.argv[3];
      }

      const ld = path.resolve(labpath, 'lab-descriptor.json');

      <<from-desc>>
  }
  #+END_SRC
* <2020-06-09 Tue>


  - build experiments
    - build lab
      - deploy experiments
        - if deployment fails, update list of experiments in lab sources
      - rebuild lab
        - deploy lab
          - tag lab
  - delete builds (on confirmation from user)

  - assume: deployment cannot be reverted
